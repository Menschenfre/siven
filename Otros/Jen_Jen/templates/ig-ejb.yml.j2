---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
  {%- if OC_VALUE != '' %}
    oc: "{{OC_VALUE}}"
  {%- endif %}
  {%- if AFFECTED_CHANNEL != '' %}
    affectedChannel: {{AFFECTED_CHANNEL}}
  {%- endif %}
  {%- if OWNER != '' %}
    owner: {{OWNER}}
  {%- endif %}
  {%- if PRODUCT != '' %}
    product: {{PRODUCT}}
  {%- endif %}
  {%- if TIERAPP != '' %}
    tierApp: {{TIERAPP}}
  {%- endif %}
    app: {{ NAME }}-app
    tier: backend
    type: ig
  name: {{ NAME }}
  namespace: bci-integ
spec:
{#- Non productive environments always use 1 replica #}
{%- if NAMESPACE not in ['reg_prod', 'reg_prod_local'] %}
  replicas: 1
{%- else %}
  replicas: {{ REPLICAS }}
{%- endif %}
{%- if NAMESPACE not in ['reg_prod', 'reg_prod_local'] %}
  revisionHistoryLimit: 1
{%- else %}
  revisionHistoryLimit: 3
{%- endif %}
  selector:
    matchLabels:
      app: {{ NAME }}-app
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 30%
    type: RollingUpdate
  {#- minReadySeconds: 300 #}
  template:
    metadata:
      labels:
        app: {{ NAME }}-app
      {%- if OC_VALUE != '' %}
        oc: "{{OC_VALUE}}"
      {%- endif %}
      {%- if AFFECTED_CHANNEL != '' %}
        affectedChannel: {{AFFECTED_CHANNEL}}
      {%- endif %}
      {%- if OWNER != '' %}
        owner: {{OWNER}}
      {%- endif %}
      {%- if PRODUCT != '' %}
        product: {{PRODUCT}}
      {%- endif %}
      {%- if TIERAPP != '' %}
        tierApp: {{TIERAPP}}
      {%- endif %}
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            -
              labelSelector:
                matchExpressions:
                  -
                    key: app
                    operator: In
                    values:
                      - {{ NAME }}-app
              topologyKey: kubernetes.io/hostname
      containers:
      - env:
        - name: PORT
          value: "8080"
        - name: SPRING_PROFILES_ACTIVE
          value: "{{ SPRING_PROFILE }}"
        - name: SPRING_CLOUD_CONFIG_URI
          value: "http://config-server-service.bci-infra:8888"
        - name: EUREKA_SERVICE_URL
          value: "http://eureka1-server-service.bci-infra:8762/eureka/,http://eureka2-server-service.bci-infra:8763/eureka/"
        - name: VAULT_SCHEME
          value: https
        - name: VAULT_HOST
          value: "vault-server-service.bci-infra"
        - name: VAULT_PORT
          value: "8200"
        - name: VAULT_TOKEN
          valueFrom:
            secretKeyRef:
              name: tokensecret
              key: token
        - name: VAULT_AUTHENTICATION
          value: "TOKEN"
        - name: VAULT_TRUST_STORE
          value: "file:/vol-ms/pubcerts.ts"
        - name: VAULT_TRUST_STORE_PWD
          value: "changeit"
        - name: MS_VERSION
          value: "{{ VERSION_COMPONENTE }}"
        - name: DESTINATIONS
          value: "{{ DESTINATIONS }}"
        - name: TARGET_IPS
          value: "{{ TARGET_IPS }}"
        - name: TARGET_PORT
          value: "{{ TARGET_PORT }}"
        - name: FOR_GODS_SAKE_PLEASE_REDEPLOY
          value: "{{ DATETIME }}"
        - name: TZ
          valueFrom:
            configMapKeyRef:
              key: TZ
              name: tz-data
        - name: CONTEXT_PATH
          value: "{{ CONTEXT_PATH }}"
        - name: JAVA_OPTS
          value: "{{ JAVA_OPTS }}"  
      {%- if NAMESPACE == 'reg_prod_local' %}
        image: repository.bci.cl:8089/reg_prod/{{OC_VALUE}}/{{ PROJECT_NAME }}:{{ VERSION_DESPLIEGUE }}
      {%- else %}
        image: registry.ng.bluemix.net/{{ NAMESPACE }}/{{ PROJECT_NAME }}:{{ VERSION_DESPLIEGUE }}
      {%- endif %}
        imagePullPolicy: Always
        name: {{ NAME }}-node
      {%- if NAMESPACE != 'reg_prod_local' %}
        securityContext:
          capabilities:
            add: ["NET_ADMIN"]
      {%- endif %}
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          requests:
          {#- 100m for Prod, 10m for every other environment #}
          {%- if NAMESPACE not in ['reg_prod', 'reg_prod_local'] %}
            cpu: 10m
          {%- else %}
            cpu: 100m
          {%- endif %}
            memory: {{ sizes.get(POD_SIZE).memory.request }}
          limits:
            memory: {{ sizes.get(POD_SIZE).memory.limit }}
        volumeMounts:
        - mountPath: /vol-ms
          name: ms-secret-vol
          readOnly: true
      imagePullSecrets:
      - name: bluemix-bci-integ-secret
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
      - name: ms-secret-vol
        secret:
          secretName: ms-secret
---
apiVersion: v1
kind: Service
metadata:
  name: {{ NAME }}-svc
  namespace: bci-integ
spec:
  ports:
  - name: {{ NAME }}-port
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: {{ NAME }}-app
  type: ClusterIP
